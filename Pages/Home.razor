@page "/"
@inject IGetterService Getter
<PageTitle>Home</PageTitle>

<div class="main row" style="white-space: pre-line">
	<div class="container">
		<p class="pd-1 bord">Понедельник</p>
		<p class="pd-3">@Monday</p>
	</div>
	<div class="container">
		<p class="pd-1 bord">Вторник</p>
		<p class="pd-3">@Tuesday</p>
	</div>
	<div class="container">
		<p class="pd-1 bord">Среда</p>
		<p class="pd-3">@Wednesday</p>
	</div>
</div>

<div class="main row" style="white-space: pre-line">
	<div class="container">
		<p class="pd-1 bord">Четверг</p>
		<p class ="pd-3">@Thursday</p>
	</div>
	<div class="container">
		<p class="pd-1 bord">Пятница</p>
		<p class="pd-3">@Friday</p>
	</div>
	<div class="container">
		<p class="pd-1 bord">Суббота</p>
		<p class="pd-3">@Saturday</p>
	</div>
</div>

<div class="footer">
</div>

@code{
	private string? Monday { get; set; }
	private string? Tuesday { get; set; }
	private string? Wednesday { get; set; }
	private string? Thursday { get; set; }
	private string? Friday { get; set; }
	private string? Saturday { get; set; }

	private static int UnixNow = (int)DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalSeconds;
	private int week = (int)Math.Round((UnixNow - 1725235200d) / (3600 * 24 * 7));

	private HttpClient httpClient = new HttpClient();

	private Timer? timer;

	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();

		Getter.SetWeek(week);

		timer = new Timer(Bruh, new System.Threading.AutoResetEvent(false), 1000, 1000);
	}

	async void Bruh(object stateInfo)
	{

		Monday = await Getter.GetLesson("monday");
		Tuesday = await Getter.GetLesson("tuesday");
		Wednesday = await Getter.GetLesson("wednesday");
		Thursday = await Getter.GetLesson("thursday");
		Friday = await Getter.GetLesson("friday");
		Saturday = await Getter.GetLesson("saturday");

		await InvokeAsync(StateHasChanged);
	}
}